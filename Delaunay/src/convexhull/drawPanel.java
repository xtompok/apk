/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package convexhull;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Polygon;
import java.awt.geom.AffineTransform;
import java.awt.geom.Path2D;
import java.awt.geom.Point2D;
import java.util.LinkedList;
import java.util.List;

/**
 *
 * @author jethro
 */
public class drawPanel extends javax.swing.JPanel {
    
    Point2D [] points;
    List<Edge> edges;
    Path2D triangulation;
    
    

    /**
     * Creates new form drawPanel
     */
    public drawPanel() {
        points = new Point2D[0];
        triangulation = new Path2D.Double();
        edges = new LinkedList<>();
        initComponents();
    }
    
    @Override
    public void paintComponent(Graphics g){
        System.err.println("Repainting...");
        super.paintComponent(g);
        Graphics2D gfx = (Graphics2D)g;
        
        int width;
        int height;
        
        width = this.getWidth();
        height = this.getHeight();
            
       
        gfx.setColor(Color.BLACK);
        
        for (int i=0;i<points.length;i++){
            int x;
            int y;
            x = (int)(points[i].getX()*width);
            y = (int)((1-points[i].getY())*height);
//            System.out.println(points[i].getX());
//            System.out.println(x);

            gfx.drawLine(x-5, y-5, x+5, y+5);
            gfx.drawLine(x-5, y+5, x+5, y-5);

        }
        
        int i=255;
        triangulation = new Path2D.Double();
        for (Edge e: edges){
            Path2D epath = new Path2D.Double();
            epath.moveTo(e.p1.getX(), e.p1.getY());
            epath.lineTo(e.p2.getX(), e.p2.getY());
            //gfx.setColor(new Color(i,0,0));
            AffineTransform at = AffineTransform.getScaleInstance(width, -height);
            epath.transform(at);
            at = AffineTransform.getTranslateInstance(0, height);
            epath.transform(at);
            gfx.draw(epath);
            i-=2;
        }
        
        
        gfx.setColor(Color.RED);
        AffineTransform at = AffineTransform.getScaleInstance(width, -height);
        triangulation.transform(at);
        at = AffineTransform.getTranslateInstance(0, height);
        triangulation.transform(at);
        gfx.draw(triangulation);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
